// LoadHTMLFragments: Load in additional HTML fragments based on device category 'keyword', set by CSS3 MediaQuery viewport width
// Inspired by: Jeremy Keith - Adactio article: 'Conditional CSS' http://adactio.com/journal/5429/
// Author: Dennis Burger (webdesign@dutchwebworks.nl)
// Github: https://github.com/dutchwebworks/responsive-fragments
// Version: 1.0.0
// License: MIT (http://www.opensource.org/licenses/mit-license.php)
// Usage: add script-tag to end of body-tag
// Prerequisites: CSS3 MediaQueries and HTML div-tag with data-attribute
// CSS3 MediaQuery: @media(max-width: 399px) { body:after { content: 'device-smartphone' } }
// CSS3 MediaQuery: @media(min-width: 400px) and (max-width: 699px) { body:after { content: 'device-tablet' } }
// CSS3 MediaQuery: @media(min-width: 700px) and (max-width: 1199px) { body:after { content: 'device-desktop' } }
// CSS3 MediaQuery: @media(min-width: 1200px) { body:after { content: 'device-wide' } }
// HTML tag(s): <div data-device-tablet="fragments/content-for-tablet.html"></div>
// HTML tag(s): <div data-device-desktop="fragments/content-for-desktop.html"></div>
// HTML tag(s): <div data-device-wide="fragments/content-for-really-wide-screens.html"></div>
// Javascript: Picks up the changes to the CSS generated body:after content 'keyword', and loads in / appends the 'data-device-tablet' URL to the div-tag
// When viewport becomes smaller, CSS hides (with same MediaQuery breakpoint) the already loaded div-tag again, like: [data-device-tablet], [data-device-desktop]  { display: none; }
window.LoadHTMLFragments=function(e,t,n){var r=[{name:"device-smartphone",loaded:!1},{name:"device-tablet",loaded:!1,parent:"device-smartphone"},{name:"device-desktop",loaded:!1,parent:"device-tablet"},{name:"device-wide",loaded:!1,parent:"device-desktop"}];checkDeviceCategory=function(){try{deviceCategory=this.getComputedStyle(t.body,":after").getPropertyValue("content");deviceCategory=deviceCategory.replace('"',"","g");deviceCategory=deviceCategory.replace('"',"","g");var e=getDevice(deviceCategory)}catch(n){}e==null?loadFragment("device-wide"):e.name!="device-smartphone"&&loadFragment(e.name)};loadFragment=function(e){var t=getDevice(e);if(!t.loaded){$("[data-"+t.name+"]").each(function(){$(this).load($(this).data(t.name));t.loaded=!0});t.parent!=n&&loadFragment(t.parent)}};getDevice=function(e){var t=r.length;while(t--)if(r[t].name==e)return r[t];return null};try{$(this).resize(checkDeviceCategory)}catch(i){}return checkDeviceCategory()}(this,this.document);